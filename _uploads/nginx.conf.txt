#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info.
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80;

                #Lets Encrypt Challenge
                location /.well-known/acme-challenge/text {
                        return 200 "text";
                }

                location / {
                        return 301 https://$host/jenkins;
                }

                location /jenkins {
                        return 301 https://$host$request_uri;
                }

        }

        server {
                #listen 443; -- nginx: [warn] the "ssl" directive is deprecated, use the "listen ... ssl" directive instead
                listen 443 ssl;
                server_name jenkins.yourdomain.net;

                ssl_certificate           /usr/local/etc/nginx/ssl/fullchain1.pem;
                ssl_certificate_key       /usr/local/etc/nginx/ssl/privkey1.pem;

                # Improve HTTPS performance with session resumption
                ssl_session_cache shared:SSL:10m;
                ssl_session_timeout 10m;

                # Enable server-side protection against BEAST attacks
                ssl_protocols TLSv1.2;
                ssl_prefer_server_ciphers on;
                ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

                # RFC-7919 recommended: https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
        	ssl_dhparam /usr/local/etc/nginx/ssl/dhparam4096.pem;
        	ssl_ecdh_curve secp521r1:secp384r1;

                # Aditional Security Headers
                # ref: https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
                add_header X-Frame-Options DENY always;

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
                add_header X-Content-Type-Options nosniff always;

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
                add_header X-Xss-Protection "1; mode=block" always;

                # Enable OCSP stapling
                # ref. http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox
                ssl_stapling on;
                ssl_stapling_verify on;
                ssl_trusted_certificate /usr/local/etc/nginx/ssl/fullchain1.pem;
                resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
                resolver_timeout 5s;

                #ssl on; -- See line 46
                #ssl_session_cache  builtin:1000  shared:SSL:10m;
                #ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
                #ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
                #ssl_prefer_server_ciphers on;

                access_log            /usr/local/etc/nginx/log/proxy.access.log;

                location / {
                        return 301 https://$host/jenkins;
                }

                location /jenkins {

                        proxy_set_header        Host $host;
                        proxy_set_header        X-Real-IP $remote_addr;
                        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header        X-Forwarded-Proto $scheme;

                        # Fix the â€œIt appears that your reverse proxy set up is broken" error.
                        proxy_pass          http://127.0.0.1:8180;
                        proxy_read_timeout  90;

                        proxy_redirect      http://127.0.0.1:8180 https://jenkins.yourdomain.net;
                }
        }
}