---
title: DC-1 CTF
date: 2020-04-17 19:40:00 -07:00
permalink: "/ctf/dc-1"
categories:
- CTF
tags:
- Ethical Hacking
author: Kirin
description: Walkthrough of DC-1 Vulnerable VM
blog_category: Security
unlisted: true
---

# DC-1 CTF

DC-1 Is a capture the flag vulnerable VM.

Download the VM. Link in resources. 

Resources:
https://www.vulnhub.com/entry/dc-1,292/

## Troubleshooting VM

Tried to import it into VirtualBox first it will complain about the network card when you try to start it. Open settings and set your network card and set it to bridged.

Then I was getting an error `Implementation of the USB 2.0 controller not found!` fixed by settings > usb > set to usb 1.1 controller.

And there we go its running.

![Proof_Running.PNG](/uploads/Proof_Running.PNG "Proof_Running")

# Enumeration

Run the following to discover local devices:
    netdiscover -c 20 -r 10.0.0.0/24

![netdiscover_results_blacked.PNG](/uploads/netdiscover_results_blacked.PNG "net_discover_blacked")

There it is. Although ill be using the dns name for ease.

Nmap fast scan to quickly see some ports quickly.

![nmap_fast.PNG](/uploads/nmap_fast.PNG "nmap_fast")

Start a Nmap Advanced Scan to see more and check out port 80 with web browser + burpsuite to find its a Drupal website.

![Firefox_port_80.PNG](/uploads/Firefox_port_80.PNG "Firefox_port_80")

Once the scan finishes we see its Drupal 7.x

![nmap_advanced_results.PNG](/uploads/nmap_advanced_results.PNG "nmap_advanced_results")

Now we run Droopescan to probe at it a bit. We can also run nikto while Droopescan is doing its thing. While all thats running, we poke around manually at robots.txt and find /admin and a few other interesting things but no access error when trying them.

It took a little while but the droopescan results are back and we narrowed it down to versions ( 7.22 -> 7.26 ).

![droopescan_results.PNG](/uploads/droopescan_results.PNG "droopescan_results")

Quick searchsploit and...

![drupalgeddon.PNG](/uploads/drupalgeddon.PNG "drupalgeddon")

Its a Drupalgeddon VM!

We run the add admin sql injection exploit (34992.py) and add user:`drupalgeddon` password:`drupalgeddon` and... its vulnerable.

![phase1.PNG](/uploads/phase1.PNG "phase1")

After logging in to the dashboard we see 2 users `Fred` & `admin` along with `flag3`.

![dashboard.PNG](/uploads/dashboard.PNG "dashboard")
![flag3.PNG](/uploads/flag3.PNG "flag3")

I went and dug arround the admin settings and found I can enable PHP code execution!

![phpfilter.PNG](/uploads/phpfilter.PNG "phpfilter")

And allow admins to use it.

![givephpformat.PNG](/uploads/givephpformat.PNG "givephpformat")

And create a page that executes php. I created a webshell with the variable x.

![php web shell.PNG](/uploads/php%20web%20shell.PNG)

Setup a metasploit multi/handler with a shell/reverse_tcp payload.
And force DC-1 connect back to us.

![msf_shell_listener.PNG](/uploads/msf_shell_listener.PNG "msf_shell_listener")
![reverse_shell.PNG](/uploads/reverse_shell.PNG "reverse_shell")

Spawn a better shell with a pty.

![pty_spawn.PNG](/uploads/pty_spawn.PNG "pty_spawn")

Poke around and immediately see `flag1.txt` .

![flag1inwww-data.PNG](/uploads/flag1inwww-data.PNG "flag1inwww-data")

Follow the advice and find the DB password and `flag2` in the config file.

![flag2andDBcreds.PNG](/uploads/flag2andDBcreds.PNG "flag2andDBcreds")

Mess around with the MySQL database but nothing too useful as it only gets us drupal access passwords and running `\! /bin/bash -p` is not escalating us from `www-data` from the mysql prompt.

![dumping_tables.PNG](/uploads/dumping_tables.PNG "dumping_tables")
![dumped_user_table.PNG](/uploads/dumped_user_table.PNG "dumped_user_table")

Checking the /home directory shows `flag4`.

![flag4.PNG](/uploads/flag4.PNG "flag4")

I was searching for stuff with find and noticed it was reveling root level files.

![find has setuid.PNG](/uploads/find%20has%20setuid.PNG)

So I ended up escalating with find set uid to get `thefinalflag.txt`. Could have also stolen the `/etc/shadow` and used john to see if it could crack it.

![Final_escalation_root.PNG](/uploads/Final_escalation_root.PNG "Final_escalation_root")

Now time to work on DC-2 !
